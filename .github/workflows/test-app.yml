name: Test App

on:
  push:
    branches: [ "main", "feature/**" ]
  pull_request:
    branches: [ "main"]

jobs:
  lint:
    name: Lint App
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: './pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm run lint

  test:
    name: Test App
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: './pnpm-lock.yaml'
        
      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm run test


  build:
    name: Build App
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'pnpm'
          cache-dependency-path: './pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm run build
  

  docker:
    name: Build Docker Images
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service-name: [ "app", "db" ]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/${{ matrix.service-name }}/Dockerfile
          push: false
          tags: user/battleship-${{ matrix.service-name }}:latest

  # docker-push:
  #   name: Build and Push Docker Image
  #   needs: build
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       service-name: [ "app", "db" ]

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
      
  #     - name: Build
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: .
  #         file: ./docker/${{ matrix.service-name }}/Dockerfile
  #         push: true
  #         tags: $${{ secrets.DOCKERHUB_USERNAME }}/battleship:battleship_${{ matrix.service-name }}
